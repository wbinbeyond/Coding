class Solution {
public:
    vector<string> splitMessage(string message, int limit) {
        return solution(message,limit,message.size());
    }
private:
    vector<string> solution(string m,int limit,int n) {
        int i=1,j=n;
        while(i<=j) {
            int mid = (i+j)/2;
            pair<vector<string>,int> ans = get_str(m,limit,mid);
            if(ans.second == 0) return ans.first;
            else if(ans.second==-1) i = mid+1;
            else j = mid-1;
        }
        return {};
    }
    
    pair<vector<string>,int> get_str(string m,int limit,int total) {
        string temp = to_string(total);
        string pre = "";
        int num = 1;
        string check = to_string(num);
        vector<string> ans;
        for(int i=0 ; i<m.length() ; ++i) {
            if(check.length()+temp.length()+3 >= limit) return {{},-1};
            if(pre.size()+check.length()+temp.length()+3 == limit) {
                string insert = pre;
                insert.push_back('<');
                insert.append(check);
                insert.push_back('/');
                insert.append(temp);
                insert.push_back('>');
                ans.push_back(insert);
                pre = "";
                i-=1;
                num+=1;
                check = to_string(num);
            }
            else {
                pre.push_back(m[i]);
            }
        }
        string insert = pre;
        insert.push_back('<');
        insert.append(check);
        insert.push_back('/');
        insert.append(temp);
        insert.push_back('>');
        ans.push_back(insert);
        if(num == total) return {ans,0};
        else if(num > total) return {{},-1};
        return {{},1};
    }
};
